const discord = require("discord.js");
const sourcebin = require("sourcebin_js");
const { MessageEmbed } = require("discord.js");
const { site, extension, inviteurl } = require("../../config.json");

module.exports = {
    name: "discrim",
    aliases: ["discriminator"],
    category: "Utility",
    usage: "z!discrim <discriminator>",
    description: "discriminator command",
    run: async (client, message, args, prefix) => {

    if(message.author.id != "484701017015975936") return message.lineReplyNoMention("This Command Is Currently Not Working Because Ziro-Bot Doesn't Have The Server Members Intent! We Contacted Discord And The Command Will Be Working Soon!")

    const ziro = client.users.cache.get("484701017015975936");
    const query = args[0];
    const choosediscrim = new MessageEmbed()
    .setColor("#000001")
    .setDescription(`**Please Choose a Discriminator!\nExample:** \`${ziro.discriminator}\``)
    if (!query) return message.lineReplyNoMention(choosediscrim);
    //if (!query) return message.lineReplyNoMention(`**Please Choose a Discriminator!\nExample:** \`${ziro.discriminator}\``);

    const users = client.users.cache.filter(user => user.discriminator === query).map(m => m.tag);

    if (query.includes(`#`)) {
      const examplediscrim = new MessageEmbed()
      .setColor("#000001")
      .setDescription(`**Command Example:**\n\`${prefix}discrim ${ziro.discriminator}\``)
        return message.lineReplyNoMention(`**Your Message Has:** \`#\``, examplediscrim);
        //return message.lineReplyNoMention(`**Example:**\n\`${prefix}discrim ${ziro.discriminator}\``);
     }

     const noresult = new MessageEmbed()
     .setColor("#000001")
     .setDescription(`**No Users Were Found With The Discriminator:** \`#${query}\``)
    if (!users.length) return message.lineReplyNoMention(`**No Results!**`, noresult);
    //message.lineReplyNoMention(`**No Users Were Found With The Discriminator:** \`#${query}\``);
/*
    hastebin(users.join("\n"))
        .then(haste => {
            message.lineReplyNoMention(`${users.length} User/s Found With The Discriminator: **#${query}**!\n${haste}`);
        })
        .catch(e => {
            message.lineReplyNoMention("An Error Has Occured | Hastebin.com may be down please try the command later!");
        }); */

        sourcebin.create([
            {
                name: `${client.user.username} Discriminators`,
                content: users.join("\n"),
                languageId: 'Apollo Guidance Computer'
            }], {
                 title: `This Sourcebin Was Generated By ${message.author.tag} Using: ${client.user.username}! (${site}.${extension})`,
                 description: `You Can Invite ${client.user.username} Here => ${site}.${extension}/${inviteurl}`
           }).then(src => {
             const usersfound = new MessageEmbed()
             .setColor("#000001")
             .setDescription(`**${users.length} User(s) Were Found With The Discriminator: **\`#${query}\`**! => [Discriminator List](${src.url})**`)
            message.lineReplyNoMention(`**Discriminators Were Found!**`, usersfound)
            //message.lineReplyNoMention(`${users.length} User/s Found With The Discriminator: **#${query}**! => ${src.url}`)
        }).catch(e => {
            let embed = new MessageEmbed()
                .setColor("#000001")
                .setDescription(`**An Error Has Occured!**\n${e}`);

            message.lineReplyNoMention(embed);
        });
}
};
